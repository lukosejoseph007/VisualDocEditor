class r{constructor(){this.currentSessionId=null,this.sessionInterval=null,this.startTime=null,this.isPanelVisible=!0,this.initializeElements(),this.bindEvents(),this.loadInitialState()}initializeElements(){this.panel=document.getElementById("clinePanel"),this.toggleBtn=document.getElementById("clineToggle"),this.panelContent=this.panel.querySelector(".panel-content"),this.sessionStatus=document.getElementById("sessionStatus"),this.sessionDuration=document.getElementById("sessionDuration"),this.sessionOperations=document.getElementById("sessionOperations"),this.totalTokens=document.getElementById("totalTokens"),this.promptTokens=document.getElementById("promptTokens"),this.completionTokens=document.getElementById("completionTokens"),this.estimatedCost=document.getElementById("estimatedCost"),this.thinkingSteps=document.getElementById("thinkingSteps"),this.avgResponseTime=document.getElementById("avgResponseTime"),this.successRate=document.getElementById("successRate"),this.totalOperations=document.getElementById("totalOperations"),this.contextBar=document.getElementById("contextBar"),this.contextSize=document.getElementById("contextSize"),this.startSessionBtn=document.getElementById("startSessionBtn"),this.endSessionBtn=document.getElementById("endSessionBtn"),this.clearSessionsBtn=document.getElementById("clearSessionsBtn")}bindEvents(){this.toggleBtn.addEventListener("click",()=>this.togglePanel()),this.startSessionBtn.addEventListener("click",()=>this.startSession()),this.endSessionBtn.addEventListener("click",()=>this.endSession()),this.clearSessionsBtn.addEventListener("click",()=>this.clearSessions()),this.setupEventListeners()}async loadInitialState(){try{const t=await window.api.clineGetTokenUsage(),e=await window.api.clineGetPerformanceMetrics(),s=await window.api.clineGetCurrentSession();this.updateTokenUsage(t),this.updatePerformanceMetrics(e),s&&(this.currentSessionId=s.id,this.updateSessionStatus(s),this.startSessionTimer())}catch(t){console.error("Failed to load initial Cline state:",t)}}async startSession(){try{const t=await window.api.clineStartSession("document-editing");this.currentSessionId=t,this.updateSessionStatus({status:"active",operations:[]}),this.startSessionTimer(),this.startSessionBtn.disabled=!0,this.endSessionBtn.disabled=!1,await this.addThinkingStep({type:"session_start",content:"Document editing session started",tokens:0})}catch(t){console.error("Failed to start session:",t),alert("Failed to start session: "+t.message)}}async endSession(t="completed"){try{await window.api.clineEndSession(this.currentSessionId,t),this.stopSessionTimer(),this.updateSessionStatus({status:"completed"}),this.startSessionBtn.disabled=!1,this.endSessionBtn.disabled=!0,this.currentSessionId=null,await this.addThinkingStep({type:"session_end",content:`Session ${t}`,tokens:0})}catch(e){console.error("Failed to end session:",e)}}async addThinkingStep(t){if(this.currentSessionId)try{const e=await window.api.clineAddThinkingStep(this.currentSessionId,t);this.addThinkingStepToUI(e)}catch(e){console.error("Failed to add thinking step:",e)}}async addThinkingProcess(t){if(this.currentSessionId)try{const s=t.replace(/<\/?thinking>/g,"").trim().split(`
`).filter(n=>n.trim().length>0);for(const n of s){const i=await window.api.clineAddThinkingStep(this.currentSessionId,{type:"thinking",content:n.trim(),tokens:0});this.addThinkingStepToUI(i),await new Promise(o=>setTimeout(o,50))}}catch(e){console.error("Failed to add thinking process:",e)}}async trackTokenUsage(t){if(this.currentSessionId)try{await window.api.clineTrackTokenUsage(this.currentSessionId,t);const e=await window.api.clineGetTokenUsage();this.updateTokenUsage(e)}catch(e){console.error("Failed to track token usage:",e)}}async trackOperation(t){if(this.currentSessionId)try{const e=await window.api.clineTrackOperation(this.currentSessionId,t);return this.updateSessionOperations(),e}catch(e){console.error("Failed to track operation:",e)}}async completeOperation(t,e){if(this.currentSessionId)try{await window.api.clineCompleteOperation(this.currentSessionId,t,e),this.updateSessionOperations()}catch(s){console.error("Failed to complete operation:",s)}}async updateContextSize(t){if(this.currentSessionId)try{await window.api.clineUpdateContextSize(this.currentSessionId,t),this.updateContextDisplay(t)}catch(e){console.error("Failed to update context size:",e)}}async trackPerformance(t){try{await window.api.clineTrackPerformance(t);const e=await window.api.clineGetPerformanceMetrics();this.updatePerformanceMetrics(e)}catch(e){console.error("Failed to track performance:",e)}}async clearSessions(){if(confirm("Clear all sessions and reset statistics?"))try{await window.api.clineClearSessions(),await window.api.clineResetTokenUsage(),this.currentSessionId=null,this.stopSessionTimer(),this.updateSessionStatus({status:"inactive",operations:[]}),this.updateTokenUsage({total:0,prompt:0,completion:0,estimatedCost:0}),this.clearThinkingSteps(),this.updatePerformanceMetrics({averageResponseTime:0,successRate:100,totalOperations:0}),this.updateContextDisplay(0),this.startSessionBtn.disabled=!1,this.endSessionBtn.disabled=!0}catch(t){console.error("Failed to clear sessions:",t)}}startSessionTimer(){this.startTime=Date.now(),this.stopSessionTimer(),this.sessionInterval=setInterval(()=>{if(this.startTime){const t=Date.now()-this.startTime;this.sessionDuration.textContent=this.formatDuration(t)}},1e3)}stopSessionTimer(){this.sessionInterval&&(clearInterval(this.sessionInterval),this.sessionInterval=null)}updateSessionStatus(t){this.sessionStatus.textContent=t.status||"inactive",this.sessionStatus.className=`status-indicator ${t.status==="active"?"active":"inactive"}`;const e=t.operations?t.operations.length:0;this.sessionOperations.textContent=`${e} ops`}updateTokenUsage(t){this.totalTokens.textContent=t.total.toLocaleString(),this.promptTokens.textContent=t.prompt.toLocaleString(),this.completionTokens.textContent=t.completion.toLocaleString(),this.estimatedCost.textContent=`$${t.estimatedCost.toFixed(2)}`}addThinkingStepToUI(t){const e=this.thinkingSteps.querySelector(".empty-state");e&&e.remove();const s=document.createElement("div");s.className="thinking-step",s.innerHTML=`
      <div class="step-type">${t.type}</div>
      <div class="step-content">${t.content}</div>
      ${t.tokens>0?`<div class="step-tokens">${t.tokens} tokens</div>`:""}
    `,this.thinkingSteps.appendChild(s),this.thinkingSteps.scrollTop=this.thinkingSteps.scrollHeight}clearThinkingSteps(){this.thinkingSteps.innerHTML='<div class="empty-state">No thinking steps recorded</div>'}updateSessionOperations(){}updatePerformanceMetrics(t){this.avgResponseTime.textContent=`${Math.round(t.averageResponseTime)}ms`,this.successRate.textContent=`${Math.round(t.successRate*100)}%`,this.totalOperations.textContent=t.totalOperations.toLocaleString()}updateContextDisplay(t){const s=Math.min(t/32e3*100,100);this.contextBar.style.width=`${s}%`,this.contextSize.textContent=`${t.toLocaleString()} tokens`,s>80?this.contextBar.style.background="var(--error)":s>60?this.contextBar.style.background="var(--warning)":this.contextBar.style.background="var(--accent)"}togglePanel(){this.isPanelVisible=!this.isPanelVisible,this.isPanelVisible?(this.panel.style.height="400px",this.panelContent.style.display="block",this.toggleBtn.textContent="âˆ’"):(this.panel.style.height="40px",this.panelContent.style.display="none",this.toggleBtn.textContent="+")}formatDuration(t){const e=Math.floor(t/1e3),s=Math.floor(e/60),n=Math.floor(s/60);return n>0?`${n}:${String(s%60).padStart(2,"0")}:${String(e%60).padStart(2,"0")}`:`${s}:${String(e%60).padStart(2,"0")}`}setupEventListeners(){}async onAIRequestStart(t){this.currentSessionId||await this.startSession();const e=await this.trackOperation({type:"ai_request",name:t.mode||"unknown",description:`AI ${t.mode} operation`});return await this.addThinkingStep({type:"ai_request_start",content:`Starting AI ${t.mode} operation`,tokens:0}),e}async onAIRequestComplete(t,e,s){await this.completeOperation(t,e),s&&await this.trackTokenUsage(s),await this.addThinkingStep({type:"ai_request_complete",content:`AI operation completed: ${e.substring(0,100)}...`,tokens:s?s.total:0}),await this.trackPerformance({responseTime:e.responseTime||0,success:!0})}async onAIRequestError(t,e){await this.completeOperation(t,{error:e.message}),await this.addThinkingStep({type:"ai_request_error",content:`AI operation failed: ${e.message}`,tokens:0}),await this.trackPerformance({responseTime:0,success:!1})}}export{r as default};
